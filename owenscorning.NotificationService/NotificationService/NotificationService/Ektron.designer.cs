#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OwensCorning.NotificationService
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="CMS400OC_COMM_STAG")]
	public partial class EktronDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertmetadata_type(metadata_type instance);
    partial void Updatemetadata_type(metadata_type instance);
    partial void Deletemetadata_type(metadata_type instance);
    partial void InsertTaxonomy(Taxonomy instance);
    partial void UpdateTaxonomy(Taxonomy instance);
    partial void DeleteTaxonomy(Taxonomy instance);
    partial void InsertTaxonomyItem(TaxonomyItem instance);
    partial void UpdateTaxonomyItem(TaxonomyItem instance);
    partial void DeleteTaxonomyItem(TaxonomyItem instance);
    partial void InsertEKContent(EKContent instance);
    partial void UpdateEKContent(EKContent instance);
    partial void DeleteEKContent(EKContent instance);
    partial void InsertDocument(Document instance);
    partial void UpdateDocument(Document instance);
    partial void DeleteDocument(Document instance);
    partial void Insertcontent_meta_tbl(content_meta_tbl instance);
    partial void Updatecontent_meta_tbl(content_meta_tbl instance);
    partial void Deletecontent_meta_tbl(content_meta_tbl instance);
    #endregion
		
		public EktronDataContext() : 
				base(global::OwensCorning.NotificationService.Properties.Settings.Default.CMS400OC_COMM_STAGConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public EktronDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EktronDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EktronDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EktronDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<metadata_type> metadata_types
		{
			get
			{
				return this.GetTable<metadata_type>();
			}
		}
		
		public System.Data.Linq.Table<Taxonomy> Taxonomies
		{
			get
			{
				return this.GetTable<Taxonomy>();
			}
		}
		
		public System.Data.Linq.Table<TaxonomyItem> TaxonomyItems
		{
			get
			{
				return this.GetTable<TaxonomyItem>();
			}
		}
		
		public System.Data.Linq.Table<EKContent> EKContents
		{
			get
			{
				return this.GetTable<EKContent>();
			}
		}
		
		public System.Data.Linq.Table<Document> Documents
		{
			get
			{
				return this.GetTable<Document>();
			}
		}
		
		public System.Data.Linq.Table<content_meta_tbl> content_meta_tbls
		{
			get
			{
				return this.GetTable<content_meta_tbl>();
			}
		}
	}
	
	[Table(Name="dbo.metadata_type")]
	public partial class metadata_type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _meta_type_id;
		
		private string _meta_name;
		
		private string _meta_name_title;
		
		private string _meta_default;
		
		private int _meta_required;
		
		private int _meta_tag_type;
		
		private int _meta_editable;
		
		private string _meta_separator;
		
		private int _meta_case_sensitive;
		
		private int _meta_remove_dups;
		
		private int _meta_allow_search;
		
		private int _meta_display;
		
		private System.Nullable<int> _selectable_only;
		
		private System.Nullable<int> _allow_multi;
		
		private string _meta_selectabletext;
		
		private System.Nullable<int> _meta_language;
		
		private int _object_type;
		
		private System.Nullable<int> _meta_display_ee;
		
		private EntitySet<content_meta_tbl> _content_meta_tbls;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onmeta_type_idChanging(long value);
    partial void Onmeta_type_idChanged();
    partial void Onmeta_nameChanging(string value);
    partial void Onmeta_nameChanged();
    partial void Onmeta_name_titleChanging(string value);
    partial void Onmeta_name_titleChanged();
    partial void Onmeta_defaultChanging(string value);
    partial void Onmeta_defaultChanged();
    partial void Onmeta_requiredChanging(int value);
    partial void Onmeta_requiredChanged();
    partial void Onmeta_tag_typeChanging(int value);
    partial void Onmeta_tag_typeChanged();
    partial void Onmeta_editableChanging(int value);
    partial void Onmeta_editableChanged();
    partial void Onmeta_separatorChanging(string value);
    partial void Onmeta_separatorChanged();
    partial void Onmeta_case_sensitiveChanging(int value);
    partial void Onmeta_case_sensitiveChanged();
    partial void Onmeta_remove_dupsChanging(int value);
    partial void Onmeta_remove_dupsChanged();
    partial void Onmeta_allow_searchChanging(int value);
    partial void Onmeta_allow_searchChanged();
    partial void Onmeta_displayChanging(int value);
    partial void Onmeta_displayChanged();
    partial void Onselectable_onlyChanging(System.Nullable<int> value);
    partial void Onselectable_onlyChanged();
    partial void Onallow_multiChanging(System.Nullable<int> value);
    partial void Onallow_multiChanged();
    partial void Onmeta_selectabletextChanging(string value);
    partial void Onmeta_selectabletextChanged();
    partial void Onmeta_languageChanging(System.Nullable<int> value);
    partial void Onmeta_languageChanged();
    partial void Onobject_typeChanging(int value);
    partial void Onobject_typeChanged();
    partial void Onmeta_display_eeChanging(System.Nullable<int> value);
    partial void Onmeta_display_eeChanged();
    #endregion
		
		public metadata_type()
		{
			this._content_meta_tbls = new EntitySet<content_meta_tbl>(new Action<content_meta_tbl>(this.attach_content_meta_tbls), new Action<content_meta_tbl>(this.detach_content_meta_tbls));
			OnCreated();
		}
		
		[Column(Storage="_meta_type_id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long meta_type_id
		{
			get
			{
				return this._meta_type_id;
			}
			set
			{
				if ((this._meta_type_id != value))
				{
					this.Onmeta_type_idChanging(value);
					this.SendPropertyChanging();
					this._meta_type_id = value;
					this.SendPropertyChanged("meta_type_id");
					this.Onmeta_type_idChanged();
				}
			}
		}
		
		[Column(Storage="_meta_name", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string meta_name
		{
			get
			{
				return this._meta_name;
			}
			set
			{
				if ((this._meta_name != value))
				{
					this.Onmeta_nameChanging(value);
					this.SendPropertyChanging();
					this._meta_name = value;
					this.SendPropertyChanged("meta_name");
					this.Onmeta_nameChanged();
				}
			}
		}
		
		[Column(Storage="_meta_name_title", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string meta_name_title
		{
			get
			{
				return this._meta_name_title;
			}
			set
			{
				if ((this._meta_name_title != value))
				{
					this.Onmeta_name_titleChanging(value);
					this.SendPropertyChanging();
					this._meta_name_title = value;
					this.SendPropertyChanged("meta_name_title");
					this.Onmeta_name_titleChanged();
				}
			}
		}
		
		[Column(Storage="_meta_default", DbType="NVarChar(2000)")]
		public string meta_default
		{
			get
			{
				return this._meta_default;
			}
			set
			{
				if ((this._meta_default != value))
				{
					this.Onmeta_defaultChanging(value);
					this.SendPropertyChanging();
					this._meta_default = value;
					this.SendPropertyChanged("meta_default");
					this.Onmeta_defaultChanged();
				}
			}
		}
		
		[Column(Storage="_meta_required", DbType="Int NOT NULL")]
		public int meta_required
		{
			get
			{
				return this._meta_required;
			}
			set
			{
				if ((this._meta_required != value))
				{
					this.Onmeta_requiredChanging(value);
					this.SendPropertyChanging();
					this._meta_required = value;
					this.SendPropertyChanged("meta_required");
					this.Onmeta_requiredChanged();
				}
			}
		}
		
		[Column(Storage="_meta_tag_type", DbType="Int NOT NULL")]
		public int meta_tag_type
		{
			get
			{
				return this._meta_tag_type;
			}
			set
			{
				if ((this._meta_tag_type != value))
				{
					this.Onmeta_tag_typeChanging(value);
					this.SendPropertyChanging();
					this._meta_tag_type = value;
					this.SendPropertyChanged("meta_tag_type");
					this.Onmeta_tag_typeChanged();
				}
			}
		}
		
		[Column(Storage="_meta_editable", DbType="Int NOT NULL")]
		public int meta_editable
		{
			get
			{
				return this._meta_editable;
			}
			set
			{
				if ((this._meta_editable != value))
				{
					this.Onmeta_editableChanging(value);
					this.SendPropertyChanging();
					this._meta_editable = value;
					this.SendPropertyChanged("meta_editable");
					this.Onmeta_editableChanged();
				}
			}
		}
		
		[Column(Storage="_meta_separator", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string meta_separator
		{
			get
			{
				return this._meta_separator;
			}
			set
			{
				if ((this._meta_separator != value))
				{
					this.Onmeta_separatorChanging(value);
					this.SendPropertyChanging();
					this._meta_separator = value;
					this.SendPropertyChanged("meta_separator");
					this.Onmeta_separatorChanged();
				}
			}
		}
		
		[Column(Storage="_meta_case_sensitive", DbType="Int NOT NULL")]
		public int meta_case_sensitive
		{
			get
			{
				return this._meta_case_sensitive;
			}
			set
			{
				if ((this._meta_case_sensitive != value))
				{
					this.Onmeta_case_sensitiveChanging(value);
					this.SendPropertyChanging();
					this._meta_case_sensitive = value;
					this.SendPropertyChanged("meta_case_sensitive");
					this.Onmeta_case_sensitiveChanged();
				}
			}
		}
		
		[Column(Storage="_meta_remove_dups", DbType="Int NOT NULL")]
		public int meta_remove_dups
		{
			get
			{
				return this._meta_remove_dups;
			}
			set
			{
				if ((this._meta_remove_dups != value))
				{
					this.Onmeta_remove_dupsChanging(value);
					this.SendPropertyChanging();
					this._meta_remove_dups = value;
					this.SendPropertyChanged("meta_remove_dups");
					this.Onmeta_remove_dupsChanged();
				}
			}
		}
		
		[Column(Storage="_meta_allow_search", DbType="Int NOT NULL")]
		public int meta_allow_search
		{
			get
			{
				return this._meta_allow_search;
			}
			set
			{
				if ((this._meta_allow_search != value))
				{
					this.Onmeta_allow_searchChanging(value);
					this.SendPropertyChanging();
					this._meta_allow_search = value;
					this.SendPropertyChanged("meta_allow_search");
					this.Onmeta_allow_searchChanged();
				}
			}
		}
		
		[Column(Storage="_meta_display", DbType="Int NOT NULL")]
		public int meta_display
		{
			get
			{
				return this._meta_display;
			}
			set
			{
				if ((this._meta_display != value))
				{
					this.Onmeta_displayChanging(value);
					this.SendPropertyChanging();
					this._meta_display = value;
					this.SendPropertyChanged("meta_display");
					this.Onmeta_displayChanged();
				}
			}
		}
		
		[Column(Storage="_selectable_only", DbType="Int")]
		public System.Nullable<int> selectable_only
		{
			get
			{
				return this._selectable_only;
			}
			set
			{
				if ((this._selectable_only != value))
				{
					this.Onselectable_onlyChanging(value);
					this.SendPropertyChanging();
					this._selectable_only = value;
					this.SendPropertyChanged("selectable_only");
					this.Onselectable_onlyChanged();
				}
			}
		}
		
		[Column(Storage="_allow_multi", DbType="Int")]
		public System.Nullable<int> allow_multi
		{
			get
			{
				return this._allow_multi;
			}
			set
			{
				if ((this._allow_multi != value))
				{
					this.Onallow_multiChanging(value);
					this.SendPropertyChanging();
					this._allow_multi = value;
					this.SendPropertyChanged("allow_multi");
					this.Onallow_multiChanged();
				}
			}
		}
		
		[Column(Storage="_meta_selectabletext", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string meta_selectabletext
		{
			get
			{
				return this._meta_selectabletext;
			}
			set
			{
				if ((this._meta_selectabletext != value))
				{
					this.Onmeta_selectabletextChanging(value);
					this.SendPropertyChanging();
					this._meta_selectabletext = value;
					this.SendPropertyChanged("meta_selectabletext");
					this.Onmeta_selectabletextChanged();
				}
			}
		}
		
		[Column(Storage="_meta_language", DbType="Int")]
		public System.Nullable<int> meta_language
		{
			get
			{
				return this._meta_language;
			}
			set
			{
				if ((this._meta_language != value))
				{
					this.Onmeta_languageChanging(value);
					this.SendPropertyChanging();
					this._meta_language = value;
					this.SendPropertyChanged("meta_language");
					this.Onmeta_languageChanged();
				}
			}
		}
		
		[Column(Storage="_object_type", DbType="Int NOT NULL")]
		public int object_type
		{
			get
			{
				return this._object_type;
			}
			set
			{
				if ((this._object_type != value))
				{
					this.Onobject_typeChanging(value);
					this.SendPropertyChanging();
					this._object_type = value;
					this.SendPropertyChanged("object_type");
					this.Onobject_typeChanged();
				}
			}
		}
		
		[Column(Storage="_meta_display_ee", DbType="Int")]
		public System.Nullable<int> meta_display_ee
		{
			get
			{
				return this._meta_display_ee;
			}
			set
			{
				if ((this._meta_display_ee != value))
				{
					this.Onmeta_display_eeChanging(value);
					this.SendPropertyChanging();
					this._meta_display_ee = value;
					this.SendPropertyChanged("meta_display_ee");
					this.Onmeta_display_eeChanged();
				}
			}
		}
		
		[Association(Name="metadata_type_content_meta_tbl", Storage="_content_meta_tbls", ThisKey="meta_type_id", OtherKey="meta_type_id")]
		public EntitySet<content_meta_tbl> content_meta_tbls
		{
			get
			{
				return this._content_meta_tbls;
			}
			set
			{
				this._content_meta_tbls.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_content_meta_tbls(content_meta_tbl entity)
		{
			this.SendPropertyChanging();
			entity.metadata_type = this;
		}
		
		private void detach_content_meta_tbls(content_meta_tbl entity)
		{
			this.SendPropertyChanging();
			entity.metadata_type = null;
		}
	}
	
	[Table(Name="dbo.taxonomy_tbl")]
	public partial class Taxonomy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _taxonomy_id;
		
		private int _taxonomy_language_id;
		
		private string _taxonomy_name;
		
		private string _taxonomy_description;
		
		private long _taxonomy_parent_id;
		
		private int _taxonomy_level;
		
		private string _taxonomy_path;
		
		private System.Nullable<int> _taxonomy_display_order;
		
		private System.Nullable<short> _taxonomy_type;
		
		private System.Nullable<long> _taxonomy_user_id;
		
		private System.Nullable<bool> _inherit_template;
		
		private System.Nullable<long> _inherit_template_from;
		
		private System.Nullable<long> _template_id;
		
		private System.Nullable<int> _item_count;
		
		private System.DateTime _taxonomy_date_created;
		
		private System.DateTime _taxonomy_date_modified;
		
		private System.Nullable<long> _folder_id;
		
		private string _image_url;
		
		private string _category_url;
		
		private bool _synchronize;
		
		private bool _visible;
		
		private EntitySet<TaxonomyItem> _TaxonomyItems;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ontaxonomy_idChanging(long value);
    partial void Ontaxonomy_idChanged();
    partial void Ontaxonomy_language_idChanging(int value);
    partial void Ontaxonomy_language_idChanged();
    partial void Ontaxonomy_nameChanging(string value);
    partial void Ontaxonomy_nameChanged();
    partial void Ontaxonomy_descriptionChanging(string value);
    partial void Ontaxonomy_descriptionChanged();
    partial void Ontaxonomy_parent_idChanging(long value);
    partial void Ontaxonomy_parent_idChanged();
    partial void Ontaxonomy_levelChanging(int value);
    partial void Ontaxonomy_levelChanged();
    partial void Ontaxonomy_pathChanging(string value);
    partial void Ontaxonomy_pathChanged();
    partial void Ontaxonomy_display_orderChanging(System.Nullable<int> value);
    partial void Ontaxonomy_display_orderChanged();
    partial void Ontaxonomy_typeChanging(System.Nullable<short> value);
    partial void Ontaxonomy_typeChanged();
    partial void Ontaxonomy_user_idChanging(System.Nullable<long> value);
    partial void Ontaxonomy_user_idChanged();
    partial void Oninherit_templateChanging(System.Nullable<bool> value);
    partial void Oninherit_templateChanged();
    partial void Oninherit_template_fromChanging(System.Nullable<long> value);
    partial void Oninherit_template_fromChanged();
    partial void Ontemplate_idChanging(System.Nullable<long> value);
    partial void Ontemplate_idChanged();
    partial void Onitem_countChanging(System.Nullable<int> value);
    partial void Onitem_countChanged();
    partial void Ontaxonomy_date_createdChanging(System.DateTime value);
    partial void Ontaxonomy_date_createdChanged();
    partial void Ontaxonomy_date_modifiedChanging(System.DateTime value);
    partial void Ontaxonomy_date_modifiedChanged();
    partial void Onfolder_idChanging(System.Nullable<long> value);
    partial void Onfolder_idChanged();
    partial void Onimage_urlChanging(string value);
    partial void Onimage_urlChanged();
    partial void Oncategory_urlChanging(string value);
    partial void Oncategory_urlChanged();
    partial void OnsynchronizeChanging(bool value);
    partial void OnsynchronizeChanged();
    partial void OnvisibleChanging(bool value);
    partial void OnvisibleChanged();
    #endregion
		
		public Taxonomy()
		{
			this._TaxonomyItems = new EntitySet<TaxonomyItem>(new Action<TaxonomyItem>(this.attach_TaxonomyItems), new Action<TaxonomyItem>(this.detach_TaxonomyItems));
			OnCreated();
		}
		
		[Column(Storage="_taxonomy_id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long taxonomy_id
		{
			get
			{
				return this._taxonomy_id;
			}
			set
			{
				if ((this._taxonomy_id != value))
				{
					this.Ontaxonomy_idChanging(value);
					this.SendPropertyChanging();
					this._taxonomy_id = value;
					this.SendPropertyChanged("taxonomy_id");
					this.Ontaxonomy_idChanged();
				}
			}
		}
		
		[Column(Storage="_taxonomy_language_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int taxonomy_language_id
		{
			get
			{
				return this._taxonomy_language_id;
			}
			set
			{
				if ((this._taxonomy_language_id != value))
				{
					this.Ontaxonomy_language_idChanging(value);
					this.SendPropertyChanging();
					this._taxonomy_language_id = value;
					this.SendPropertyChanged("taxonomy_language_id");
					this.Ontaxonomy_language_idChanged();
				}
			}
		}
		
		[Column(Storage="_taxonomy_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string taxonomy_name
		{
			get
			{
				return this._taxonomy_name;
			}
			set
			{
				if ((this._taxonomy_name != value))
				{
					this.Ontaxonomy_nameChanging(value);
					this.SendPropertyChanging();
					this._taxonomy_name = value;
					this.SendPropertyChanged("taxonomy_name");
					this.Ontaxonomy_nameChanged();
				}
			}
		}
		
		[Column(Storage="_taxonomy_description", DbType="NVarChar(200)")]
		public string taxonomy_description
		{
			get
			{
				return this._taxonomy_description;
			}
			set
			{
				if ((this._taxonomy_description != value))
				{
					this.Ontaxonomy_descriptionChanging(value);
					this.SendPropertyChanging();
					this._taxonomy_description = value;
					this.SendPropertyChanged("taxonomy_description");
					this.Ontaxonomy_descriptionChanged();
				}
			}
		}
		
		[Column(Storage="_taxonomy_parent_id", DbType="BigInt NOT NULL")]
		public long taxonomy_parent_id
		{
			get
			{
				return this._taxonomy_parent_id;
			}
			set
			{
				if ((this._taxonomy_parent_id != value))
				{
					this.Ontaxonomy_parent_idChanging(value);
					this.SendPropertyChanging();
					this._taxonomy_parent_id = value;
					this.SendPropertyChanged("taxonomy_parent_id");
					this.Ontaxonomy_parent_idChanged();
				}
			}
		}
		
		[Column(Storage="_taxonomy_level", DbType="Int NOT NULL")]
		public int taxonomy_level
		{
			get
			{
				return this._taxonomy_level;
			}
			set
			{
				if ((this._taxonomy_level != value))
				{
					this.Ontaxonomy_levelChanging(value);
					this.SendPropertyChanging();
					this._taxonomy_level = value;
					this.SendPropertyChanged("taxonomy_level");
					this.Ontaxonomy_levelChanged();
				}
			}
		}
		
		[Column(Storage="_taxonomy_path", DbType="NVarChar(3600) NOT NULL", CanBeNull=false)]
		public string taxonomy_path
		{
			get
			{
				return this._taxonomy_path;
			}
			set
			{
				if ((this._taxonomy_path != value))
				{
					this.Ontaxonomy_pathChanging(value);
					this.SendPropertyChanging();
					this._taxonomy_path = value;
					this.SendPropertyChanged("taxonomy_path");
					this.Ontaxonomy_pathChanged();
				}
			}
		}
		
		[Column(Storage="_taxonomy_display_order", DbType="Int")]
		public System.Nullable<int> taxonomy_display_order
		{
			get
			{
				return this._taxonomy_display_order;
			}
			set
			{
				if ((this._taxonomy_display_order != value))
				{
					this.Ontaxonomy_display_orderChanging(value);
					this.SendPropertyChanging();
					this._taxonomy_display_order = value;
					this.SendPropertyChanged("taxonomy_display_order");
					this.Ontaxonomy_display_orderChanged();
				}
			}
		}
		
		[Column(Storage="_taxonomy_type", DbType="SmallInt")]
		public System.Nullable<short> taxonomy_type
		{
			get
			{
				return this._taxonomy_type;
			}
			set
			{
				if ((this._taxonomy_type != value))
				{
					this.Ontaxonomy_typeChanging(value);
					this.SendPropertyChanging();
					this._taxonomy_type = value;
					this.SendPropertyChanged("taxonomy_type");
					this.Ontaxonomy_typeChanged();
				}
			}
		}
		
		[Column(Storage="_taxonomy_user_id", DbType="BigInt")]
		public System.Nullable<long> taxonomy_user_id
		{
			get
			{
				return this._taxonomy_user_id;
			}
			set
			{
				if ((this._taxonomy_user_id != value))
				{
					this.Ontaxonomy_user_idChanging(value);
					this.SendPropertyChanging();
					this._taxonomy_user_id = value;
					this.SendPropertyChanged("taxonomy_user_id");
					this.Ontaxonomy_user_idChanged();
				}
			}
		}
		
		[Column(Storage="_inherit_template", DbType="Bit")]
		public System.Nullable<bool> inherit_template
		{
			get
			{
				return this._inherit_template;
			}
			set
			{
				if ((this._inherit_template != value))
				{
					this.Oninherit_templateChanging(value);
					this.SendPropertyChanging();
					this._inherit_template = value;
					this.SendPropertyChanged("inherit_template");
					this.Oninherit_templateChanged();
				}
			}
		}
		
		[Column(Storage="_inherit_template_from", DbType="BigInt")]
		public System.Nullable<long> inherit_template_from
		{
			get
			{
				return this._inherit_template_from;
			}
			set
			{
				if ((this._inherit_template_from != value))
				{
					this.Oninherit_template_fromChanging(value);
					this.SendPropertyChanging();
					this._inherit_template_from = value;
					this.SendPropertyChanged("inherit_template_from");
					this.Oninherit_template_fromChanged();
				}
			}
		}
		
		[Column(Storage="_template_id", DbType="BigInt")]
		public System.Nullable<long> template_id
		{
			get
			{
				return this._template_id;
			}
			set
			{
				if ((this._template_id != value))
				{
					this.Ontemplate_idChanging(value);
					this.SendPropertyChanging();
					this._template_id = value;
					this.SendPropertyChanged("template_id");
					this.Ontemplate_idChanged();
				}
			}
		}
		
		[Column(Storage="_item_count", DbType="Int")]
		public System.Nullable<int> item_count
		{
			get
			{
				return this._item_count;
			}
			set
			{
				if ((this._item_count != value))
				{
					this.Onitem_countChanging(value);
					this.SendPropertyChanging();
					this._item_count = value;
					this.SendPropertyChanged("item_count");
					this.Onitem_countChanged();
				}
			}
		}
		
		[Column(Storage="_taxonomy_date_created", DbType="DateTime NOT NULL")]
		public System.DateTime taxonomy_date_created
		{
			get
			{
				return this._taxonomy_date_created;
			}
			set
			{
				if ((this._taxonomy_date_created != value))
				{
					this.Ontaxonomy_date_createdChanging(value);
					this.SendPropertyChanging();
					this._taxonomy_date_created = value;
					this.SendPropertyChanged("taxonomy_date_created");
					this.Ontaxonomy_date_createdChanged();
				}
			}
		}
		
		[Column(Storage="_taxonomy_date_modified", DbType="DateTime NOT NULL")]
		public System.DateTime taxonomy_date_modified
		{
			get
			{
				return this._taxonomy_date_modified;
			}
			set
			{
				if ((this._taxonomy_date_modified != value))
				{
					this.Ontaxonomy_date_modifiedChanging(value);
					this.SendPropertyChanging();
					this._taxonomy_date_modified = value;
					this.SendPropertyChanged("taxonomy_date_modified");
					this.Ontaxonomy_date_modifiedChanged();
				}
			}
		}
		
		[Column(Storage="_folder_id", DbType="BigInt")]
		public System.Nullable<long> folder_id
		{
			get
			{
				return this._folder_id;
			}
			set
			{
				if ((this._folder_id != value))
				{
					this.Onfolder_idChanging(value);
					this.SendPropertyChanging();
					this._folder_id = value;
					this.SendPropertyChanged("folder_id");
					this.Onfolder_idChanged();
				}
			}
		}
		
		[Column(Storage="_image_url", DbType="NVarChar(255)")]
		public string image_url
		{
			get
			{
				return this._image_url;
			}
			set
			{
				if ((this._image_url != value))
				{
					this.Onimage_urlChanging(value);
					this.SendPropertyChanging();
					this._image_url = value;
					this.SendPropertyChanged("image_url");
					this.Onimage_urlChanged();
				}
			}
		}
		
		[Column(Storage="_category_url", DbType="NVarChar(255)")]
		public string category_url
		{
			get
			{
				return this._category_url;
			}
			set
			{
				if ((this._category_url != value))
				{
					this.Oncategory_urlChanging(value);
					this.SendPropertyChanging();
					this._category_url = value;
					this.SendPropertyChanged("category_url");
					this.Oncategory_urlChanged();
				}
			}
		}
		
		[Column(Storage="_synchronize", DbType="Bit NOT NULL")]
		public bool synchronize
		{
			get
			{
				return this._synchronize;
			}
			set
			{
				if ((this._synchronize != value))
				{
					this.OnsynchronizeChanging(value);
					this.SendPropertyChanging();
					this._synchronize = value;
					this.SendPropertyChanged("synchronize");
					this.OnsynchronizeChanged();
				}
			}
		}
		
		[Column(Storage="_visible", DbType="Bit NOT NULL")]
		public bool visible
		{
			get
			{
				return this._visible;
			}
			set
			{
				if ((this._visible != value))
				{
					this.OnvisibleChanging(value);
					this.SendPropertyChanging();
					this._visible = value;
					this.SendPropertyChanged("visible");
					this.OnvisibleChanged();
				}
			}
		}
		
		[Association(Name="Taxonomy_TaxonomyItem", Storage="_TaxonomyItems", ThisKey="taxonomy_id,taxonomy_language_id", OtherKey="taxonomy_id,taxonomy_language_id")]
		public EntitySet<TaxonomyItem> TaxonomyItems
		{
			get
			{
				return this._TaxonomyItems;
			}
			set
			{
				this._TaxonomyItems.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TaxonomyItems(TaxonomyItem entity)
		{
			this.SendPropertyChanging();
			entity.Taxonomy = this;
		}
		
		private void detach_TaxonomyItems(TaxonomyItem entity)
		{
			this.SendPropertyChanging();
			entity.Taxonomy = null;
		}
	}
	
	[Table(Name="dbo.taxonomy_item_tbl")]
	public partial class TaxonomyItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _taxonomy_id;
		
		private int _taxonomy_language_id;
		
		private long _taxonomy_item_id;
		
		private int _taxonomy_item_language;
		
		private short _taxonomy_item_type;
		
		private System.Nullable<int> _taxonomy_item_display_order;
		
		private long _taxonomy_item_added_user;
		
		private System.DateTime _taxonomy_item_date_created;
		
		private System.DateTime _taxonomy_item_date_modified;
		
		private EntityRef<EKContent> _EKContents;
		
		private EntityRef<Taxonomy> _Taxonomy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ontaxonomy_idChanging(long value);
    partial void Ontaxonomy_idChanged();
    partial void Ontaxonomy_language_idChanging(int value);
    partial void Ontaxonomy_language_idChanged();
    partial void Ontaxonomy_item_idChanging(long value);
    partial void Ontaxonomy_item_idChanged();
    partial void Ontaxonomy_item_languageChanging(int value);
    partial void Ontaxonomy_item_languageChanged();
    partial void Ontaxonomy_item_typeChanging(short value);
    partial void Ontaxonomy_item_typeChanged();
    partial void Ontaxonomy_item_display_orderChanging(System.Nullable<int> value);
    partial void Ontaxonomy_item_display_orderChanged();
    partial void Ontaxonomy_item_added_userChanging(long value);
    partial void Ontaxonomy_item_added_userChanged();
    partial void Ontaxonomy_item_date_createdChanging(System.DateTime value);
    partial void Ontaxonomy_item_date_createdChanged();
    partial void Ontaxonomy_item_date_modifiedChanging(System.DateTime value);
    partial void Ontaxonomy_item_date_modifiedChanged();
    #endregion
		
		public TaxonomyItem()
		{
			this._EKContents = default(EntityRef<EKContent>);
			this._Taxonomy = default(EntityRef<Taxonomy>);
			OnCreated();
		}
		
		[Column(Storage="_taxonomy_id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long taxonomy_id
		{
			get
			{
				return this._taxonomy_id;
			}
			set
			{
				if ((this._taxonomy_id != value))
				{
					if (this._Taxonomy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontaxonomy_idChanging(value);
					this.SendPropertyChanging();
					this._taxonomy_id = value;
					this.SendPropertyChanged("taxonomy_id");
					this.Ontaxonomy_idChanged();
				}
			}
		}
		
		[Column(Storage="_taxonomy_language_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int taxonomy_language_id
		{
			get
			{
				return this._taxonomy_language_id;
			}
			set
			{
				if ((this._taxonomy_language_id != value))
				{
					if (this._Taxonomy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontaxonomy_language_idChanging(value);
					this.SendPropertyChanging();
					this._taxonomy_language_id = value;
					this.SendPropertyChanged("taxonomy_language_id");
					this.Ontaxonomy_language_idChanged();
				}
			}
		}
		
		[Column(Storage="_taxonomy_item_id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long taxonomy_item_id
		{
			get
			{
				return this._taxonomy_item_id;
			}
			set
			{
				if ((this._taxonomy_item_id != value))
				{
					this.Ontaxonomy_item_idChanging(value);
					this.SendPropertyChanging();
					this._taxonomy_item_id = value;
					this.SendPropertyChanged("taxonomy_item_id");
					this.Ontaxonomy_item_idChanged();
				}
			}
		}
		
		[Column(Storage="_taxonomy_item_language", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int taxonomy_item_language
		{
			get
			{
				return this._taxonomy_item_language;
			}
			set
			{
				if ((this._taxonomy_item_language != value))
				{
					this.Ontaxonomy_item_languageChanging(value);
					this.SendPropertyChanging();
					this._taxonomy_item_language = value;
					this.SendPropertyChanged("taxonomy_item_language");
					this.Ontaxonomy_item_languageChanged();
				}
			}
		}
		
		[Column(Storage="_taxonomy_item_type", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short taxonomy_item_type
		{
			get
			{
				return this._taxonomy_item_type;
			}
			set
			{
				if ((this._taxonomy_item_type != value))
				{
					this.Ontaxonomy_item_typeChanging(value);
					this.SendPropertyChanging();
					this._taxonomy_item_type = value;
					this.SendPropertyChanged("taxonomy_item_type");
					this.Ontaxonomy_item_typeChanged();
				}
			}
		}
		
		[Column(Storage="_taxonomy_item_display_order", DbType="Int")]
		public System.Nullable<int> taxonomy_item_display_order
		{
			get
			{
				return this._taxonomy_item_display_order;
			}
			set
			{
				if ((this._taxonomy_item_display_order != value))
				{
					this.Ontaxonomy_item_display_orderChanging(value);
					this.SendPropertyChanging();
					this._taxonomy_item_display_order = value;
					this.SendPropertyChanged("taxonomy_item_display_order");
					this.Ontaxonomy_item_display_orderChanged();
				}
			}
		}
		
		[Column(Storage="_taxonomy_item_added_user", DbType="BigInt NOT NULL")]
		public long taxonomy_item_added_user
		{
			get
			{
				return this._taxonomy_item_added_user;
			}
			set
			{
				if ((this._taxonomy_item_added_user != value))
				{
					this.Ontaxonomy_item_added_userChanging(value);
					this.SendPropertyChanging();
					this._taxonomy_item_added_user = value;
					this.SendPropertyChanged("taxonomy_item_added_user");
					this.Ontaxonomy_item_added_userChanged();
				}
			}
		}
		
		[Column(Storage="_taxonomy_item_date_created", DbType="DateTime NOT NULL")]
		public System.DateTime taxonomy_item_date_created
		{
			get
			{
				return this._taxonomy_item_date_created;
			}
			set
			{
				if ((this._taxonomy_item_date_created != value))
				{
					this.Ontaxonomy_item_date_createdChanging(value);
					this.SendPropertyChanging();
					this._taxonomy_item_date_created = value;
					this.SendPropertyChanged("taxonomy_item_date_created");
					this.Ontaxonomy_item_date_createdChanged();
				}
			}
		}
		
		[Column(Storage="_taxonomy_item_date_modified", DbType="DateTime NOT NULL")]
		public System.DateTime taxonomy_item_date_modified
		{
			get
			{
				return this._taxonomy_item_date_modified;
			}
			set
			{
				if ((this._taxonomy_item_date_modified != value))
				{
					this.Ontaxonomy_item_date_modifiedChanging(value);
					this.SendPropertyChanging();
					this._taxonomy_item_date_modified = value;
					this.SendPropertyChanged("taxonomy_item_date_modified");
					this.Ontaxonomy_item_date_modifiedChanged();
				}
			}
		}
		
		[Association(Name="TaxonomyItem_EKContent", Storage="_EKContents", ThisKey="taxonomy_item_id", OtherKey="content_id", IsUnique=true, IsForeignKey=false)]
		public EKContent EKContents
		{
			get
			{
				return this._EKContents.Entity;
			}
			set
			{
				EKContent previousValue = this._EKContents.Entity;
				if (((previousValue != value) 
							|| (this._EKContents.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._EKContents.Entity = null;
						previousValue.TaxonomyItem = null;
					}
					this._EKContents.Entity = value;
					if ((value != null))
					{
						value.TaxonomyItem = this;
					}
					this.SendPropertyChanged("EKContents");
				}
			}
		}
		
		[Association(Name="Taxonomy_TaxonomyItem", Storage="_Taxonomy", ThisKey="taxonomy_id,taxonomy_language_id", OtherKey="taxonomy_id,taxonomy_language_id", IsForeignKey=true)]
		public Taxonomy Taxonomy
		{
			get
			{
				return this._Taxonomy.Entity;
			}
			set
			{
				Taxonomy previousValue = this._Taxonomy.Entity;
				if (((previousValue != value) 
							|| (this._Taxonomy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Taxonomy.Entity = null;
						previousValue.TaxonomyItems.Remove(this);
					}
					this._Taxonomy.Entity = value;
					if ((value != null))
					{
						value.TaxonomyItems.Add(this);
						this._taxonomy_id = value.taxonomy_id;
						this._taxonomy_language_id = value.taxonomy_language_id;
					}
					else
					{
						this._taxonomy_id = default(long);
						this._taxonomy_language_id = default(int);
					}
					this.SendPropertyChanged("Taxonomy");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.content")]
	public partial class EKContent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _content_id;
		
		private int _content_language;
		
		private string _content_title;
		
		private string _content_html;
		
		private char _content_status;
		
		private string _content_meta_data;
		
		private System.DateTime _date_created;
		
		private string _last_edit_lname;
		
		private string _last_edit_fname;
		
		private string _last_edit_comment;
		
		private System.DateTime _last_edit_date;
		
		private System.Nullable<long> _user_id;
		
		private long _folder_id;
		
		private int _inherit_permissions;
		
		private System.Nullable<long> _inherit_permissions_from;
		
		private int _inherit_xml;
		
		private long _inherit_xml_from;
		
		private int _private_content;
		
		private string _content_teaser;
		
		private int _published;
		
		private System.Nullable<System.DateTime> _go_live;
		
		private string _content_text;
		
		private System.Nullable<System.DateTime> _end_date;
		
		private int _content_type;
		
		private System.Nullable<int> _approval_method;
		
		private System.Nullable<int> _searchable;
		
		private System.Nullable<int> _end_date_action;
		
		private System.Nullable<long> _alias_id;
		
		private string _contentfulltextkey;
		
		private string _asset_id;
		
		private string _asset_version;
		
		private System.Nullable<long> _xml_config_id;
		
		private System.Nullable<long> _template_id;
		
		private System.Nullable<System.DateTime> _last_replicated_date;
		
		private string _image;
		
		private System.Nullable<bool> _private;
		
		private System.Nullable<long> _flag_def_id;
		
		private int _content_subtype;
		
		private EntityRef<Document> _AssetDataTable;
		
		private EntityRef<TaxonomyItem> _TaxonomyItem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Oncontent_idChanging(long value);
    partial void Oncontent_idChanged();
    partial void Oncontent_languageChanging(int value);
    partial void Oncontent_languageChanged();
    partial void Oncontent_titleChanging(string value);
    partial void Oncontent_titleChanged();
    partial void Oncontent_htmlChanging(string value);
    partial void Oncontent_htmlChanged();
    partial void Oncontent_statusChanging(char value);
    partial void Oncontent_statusChanged();
    partial void Oncontent_meta_dataChanging(string value);
    partial void Oncontent_meta_dataChanged();
    partial void Ondate_createdChanging(System.DateTime value);
    partial void Ondate_createdChanged();
    partial void Onlast_edit_lnameChanging(string value);
    partial void Onlast_edit_lnameChanged();
    partial void Onlast_edit_fnameChanging(string value);
    partial void Onlast_edit_fnameChanged();
    partial void Onlast_edit_commentChanging(string value);
    partial void Onlast_edit_commentChanged();
    partial void Onlast_edit_dateChanging(System.DateTime value);
    partial void Onlast_edit_dateChanged();
    partial void Onuser_idChanging(System.Nullable<long> value);
    partial void Onuser_idChanged();
    partial void Onfolder_idChanging(long value);
    partial void Onfolder_idChanged();
    partial void Oninherit_permissionsChanging(int value);
    partial void Oninherit_permissionsChanged();
    partial void Oninherit_permissions_fromChanging(System.Nullable<long> value);
    partial void Oninherit_permissions_fromChanged();
    partial void Oninherit_xmlChanging(int value);
    partial void Oninherit_xmlChanged();
    partial void Oninherit_xml_fromChanging(long value);
    partial void Oninherit_xml_fromChanged();
    partial void Onprivate_contentChanging(int value);
    partial void Onprivate_contentChanged();
    partial void Oncontent_teaserChanging(string value);
    partial void Oncontent_teaserChanged();
    partial void OnpublishedChanging(int value);
    partial void OnpublishedChanged();
    partial void Ongo_liveChanging(System.Nullable<System.DateTime> value);
    partial void Ongo_liveChanged();
    partial void Oncontent_textChanging(string value);
    partial void Oncontent_textChanged();
    partial void Onend_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onend_dateChanged();
    partial void Oncontent_typeChanging(int value);
    partial void Oncontent_typeChanged();
    partial void Onapproval_methodChanging(System.Nullable<int> value);
    partial void Onapproval_methodChanged();
    partial void OnsearchableChanging(System.Nullable<int> value);
    partial void OnsearchableChanged();
    partial void Onend_date_actionChanging(System.Nullable<int> value);
    partial void Onend_date_actionChanged();
    partial void Onalias_idChanging(System.Nullable<long> value);
    partial void Onalias_idChanged();
    partial void OncontentfulltextkeyChanging(string value);
    partial void OncontentfulltextkeyChanged();
    partial void Onasset_idChanging(string value);
    partial void Onasset_idChanged();
    partial void Onasset_versionChanging(string value);
    partial void Onasset_versionChanged();
    partial void Onxml_config_idChanging(System.Nullable<long> value);
    partial void Onxml_config_idChanged();
    partial void Ontemplate_idChanging(System.Nullable<long> value);
    partial void Ontemplate_idChanged();
    partial void Onlast_replicated_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onlast_replicated_dateChanged();
    partial void OnimageChanging(string value);
    partial void OnimageChanged();
    partial void OnprivateChanging(System.Nullable<bool> value);
    partial void OnprivateChanged();
    partial void Onflag_def_idChanging(System.Nullable<long> value);
    partial void Onflag_def_idChanged();
    partial void Oncontent_subtypeChanging(int value);
    partial void Oncontent_subtypeChanged();
    #endregion
		
		public EKContent()
		{
			this._AssetDataTable = default(EntityRef<Document>);
			this._TaxonomyItem = default(EntityRef<TaxonomyItem>);
			OnCreated();
		}
		
		[Column(Storage="_content_id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long content_id
		{
			get
			{
				return this._content_id;
			}
			set
			{
				if ((this._content_id != value))
				{
					if (this._TaxonomyItem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncontent_idChanging(value);
					this.SendPropertyChanging();
					this._content_id = value;
					this.SendPropertyChanged("content_id");
					this.Oncontent_idChanged();
				}
			}
		}
		
		[Column(Storage="_content_language", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int content_language
		{
			get
			{
				return this._content_language;
			}
			set
			{
				if ((this._content_language != value))
				{
					this.Oncontent_languageChanging(value);
					this.SendPropertyChanging();
					this._content_language = value;
					this.SendPropertyChanged("content_language");
					this.Oncontent_languageChanged();
				}
			}
		}
		
		[Column(Storage="_content_title", DbType="NVarChar(200) NOT NULL", CanBeNull=false)]
		public string content_title
		{
			get
			{
				return this._content_title;
			}
			set
			{
				if ((this._content_title != value))
				{
					this.Oncontent_titleChanging(value);
					this.SendPropertyChanging();
					this._content_title = value;
					this.SendPropertyChanged("content_title");
					this.Oncontent_titleChanged();
				}
			}
		}
		
		[Column(Storage="_content_html", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string content_html
		{
			get
			{
				return this._content_html;
			}
			set
			{
				if ((this._content_html != value))
				{
					this.Oncontent_htmlChanging(value);
					this.SendPropertyChanging();
					this._content_html = value;
					this.SendPropertyChanged("content_html");
					this.Oncontent_htmlChanged();
				}
			}
		}
		
		[Column(Storage="_content_status", DbType="NVarChar(1) NOT NULL")]
		public char content_status
		{
			get
			{
				return this._content_status;
			}
			set
			{
				if ((this._content_status != value))
				{
					this.Oncontent_statusChanging(value);
					this.SendPropertyChanging();
					this._content_status = value;
					this.SendPropertyChanged("content_status");
					this.Oncontent_statusChanged();
				}
			}
		}
		
		[Column(Storage="_content_meta_data", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string content_meta_data
		{
			get
			{
				return this._content_meta_data;
			}
			set
			{
				if ((this._content_meta_data != value))
				{
					this.Oncontent_meta_dataChanging(value);
					this.SendPropertyChanging();
					this._content_meta_data = value;
					this.SendPropertyChanged("content_meta_data");
					this.Oncontent_meta_dataChanged();
				}
			}
		}
		
		[Column(Storage="_date_created", DbType="DateTime NOT NULL")]
		public System.DateTime date_created
		{
			get
			{
				return this._date_created;
			}
			set
			{
				if ((this._date_created != value))
				{
					this.Ondate_createdChanging(value);
					this.SendPropertyChanging();
					this._date_created = value;
					this.SendPropertyChanged("date_created");
					this.Ondate_createdChanged();
				}
			}
		}
		
		[Column(Storage="_last_edit_lname", DbType="NVarChar(50)")]
		public string last_edit_lname
		{
			get
			{
				return this._last_edit_lname;
			}
			set
			{
				if ((this._last_edit_lname != value))
				{
					this.Onlast_edit_lnameChanging(value);
					this.SendPropertyChanging();
					this._last_edit_lname = value;
					this.SendPropertyChanged("last_edit_lname");
					this.Onlast_edit_lnameChanged();
				}
			}
		}
		
		[Column(Storage="_last_edit_fname", DbType="NVarChar(50)")]
		public string last_edit_fname
		{
			get
			{
				return this._last_edit_fname;
			}
			set
			{
				if ((this._last_edit_fname != value))
				{
					this.Onlast_edit_fnameChanging(value);
					this.SendPropertyChanging();
					this._last_edit_fname = value;
					this.SendPropertyChanged("last_edit_fname");
					this.Onlast_edit_fnameChanged();
				}
			}
		}
		
		[Column(Storage="_last_edit_comment", DbType="NVarChar(255)")]
		public string last_edit_comment
		{
			get
			{
				return this._last_edit_comment;
			}
			set
			{
				if ((this._last_edit_comment != value))
				{
					this.Onlast_edit_commentChanging(value);
					this.SendPropertyChanging();
					this._last_edit_comment = value;
					this.SendPropertyChanged("last_edit_comment");
					this.Onlast_edit_commentChanged();
				}
			}
		}
		
		[Column(Storage="_last_edit_date", DbType="DateTime NOT NULL")]
		public System.DateTime last_edit_date
		{
			get
			{
				return this._last_edit_date;
			}
			set
			{
				if ((this._last_edit_date != value))
				{
					this.Onlast_edit_dateChanging(value);
					this.SendPropertyChanging();
					this._last_edit_date = value;
					this.SendPropertyChanged("last_edit_date");
					this.Onlast_edit_dateChanged();
				}
			}
		}
		
		[Column(Storage="_user_id", DbType="BigInt")]
		public System.Nullable<long> user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[Column(Storage="_folder_id", DbType="BigInt NOT NULL")]
		public long folder_id
		{
			get
			{
				return this._folder_id;
			}
			set
			{
				if ((this._folder_id != value))
				{
					this.Onfolder_idChanging(value);
					this.SendPropertyChanging();
					this._folder_id = value;
					this.SendPropertyChanged("folder_id");
					this.Onfolder_idChanged();
				}
			}
		}
		
		[Column(Storage="_inherit_permissions", DbType="Int NOT NULL")]
		public int inherit_permissions
		{
			get
			{
				return this._inherit_permissions;
			}
			set
			{
				if ((this._inherit_permissions != value))
				{
					this.Oninherit_permissionsChanging(value);
					this.SendPropertyChanging();
					this._inherit_permissions = value;
					this.SendPropertyChanged("inherit_permissions");
					this.Oninherit_permissionsChanged();
				}
			}
		}
		
		[Column(Storage="_inherit_permissions_from", DbType="BigInt")]
		public System.Nullable<long> inherit_permissions_from
		{
			get
			{
				return this._inherit_permissions_from;
			}
			set
			{
				if ((this._inherit_permissions_from != value))
				{
					this.Oninherit_permissions_fromChanging(value);
					this.SendPropertyChanging();
					this._inherit_permissions_from = value;
					this.SendPropertyChanged("inherit_permissions_from");
					this.Oninherit_permissions_fromChanged();
				}
			}
		}
		
		[Column(Storage="_inherit_xml", DbType="Int NOT NULL")]
		public int inherit_xml
		{
			get
			{
				return this._inherit_xml;
			}
			set
			{
				if ((this._inherit_xml != value))
				{
					this.Oninherit_xmlChanging(value);
					this.SendPropertyChanging();
					this._inherit_xml = value;
					this.SendPropertyChanged("inherit_xml");
					this.Oninherit_xmlChanged();
				}
			}
		}
		
		[Column(Storage="_inherit_xml_from", DbType="BigInt NOT NULL")]
		public long inherit_xml_from
		{
			get
			{
				return this._inherit_xml_from;
			}
			set
			{
				if ((this._inherit_xml_from != value))
				{
					this.Oninherit_xml_fromChanging(value);
					this.SendPropertyChanging();
					this._inherit_xml_from = value;
					this.SendPropertyChanged("inherit_xml_from");
					this.Oninherit_xml_fromChanged();
				}
			}
		}
		
		[Column(Storage="_private_content", DbType="Int NOT NULL")]
		public int private_content
		{
			get
			{
				return this._private_content;
			}
			set
			{
				if ((this._private_content != value))
				{
					this.Onprivate_contentChanging(value);
					this.SendPropertyChanging();
					this._private_content = value;
					this.SendPropertyChanged("private_content");
					this.Onprivate_contentChanged();
				}
			}
		}
		
		[Column(Storage="_content_teaser", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string content_teaser
		{
			get
			{
				return this._content_teaser;
			}
			set
			{
				if ((this._content_teaser != value))
				{
					this.Oncontent_teaserChanging(value);
					this.SendPropertyChanging();
					this._content_teaser = value;
					this.SendPropertyChanged("content_teaser");
					this.Oncontent_teaserChanged();
				}
			}
		}
		
		[Column(Storage="_published", DbType="Int NOT NULL")]
		public int published
		{
			get
			{
				return this._published;
			}
			set
			{
				if ((this._published != value))
				{
					this.OnpublishedChanging(value);
					this.SendPropertyChanging();
					this._published = value;
					this.SendPropertyChanged("published");
					this.OnpublishedChanged();
				}
			}
		}
		
		[Column(Storage="_go_live", DbType="DateTime")]
		public System.Nullable<System.DateTime> go_live
		{
			get
			{
				return this._go_live;
			}
			set
			{
				if ((this._go_live != value))
				{
					this.Ongo_liveChanging(value);
					this.SendPropertyChanging();
					this._go_live = value;
					this.SendPropertyChanged("go_live");
					this.Ongo_liveChanged();
				}
			}
		}
		
		[Column(Storage="_content_text", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string content_text
		{
			get
			{
				return this._content_text;
			}
			set
			{
				if ((this._content_text != value))
				{
					this.Oncontent_textChanging(value);
					this.SendPropertyChanging();
					this._content_text = value;
					this.SendPropertyChanged("content_text");
					this.Oncontent_textChanged();
				}
			}
		}
		
		[Column(Storage="_end_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> end_date
		{
			get
			{
				return this._end_date;
			}
			set
			{
				if ((this._end_date != value))
				{
					this.Onend_dateChanging(value);
					this.SendPropertyChanging();
					this._end_date = value;
					this.SendPropertyChanged("end_date");
					this.Onend_dateChanged();
				}
			}
		}
		
		[Column(Storage="_content_type", DbType="Int NOT NULL")]
		public int content_type
		{
			get
			{
				return this._content_type;
			}
			set
			{
				if ((this._content_type != value))
				{
					this.Oncontent_typeChanging(value);
					this.SendPropertyChanging();
					this._content_type = value;
					this.SendPropertyChanged("content_type");
					this.Oncontent_typeChanged();
				}
			}
		}
		
		[Column(Storage="_approval_method", DbType="Int")]
		public System.Nullable<int> approval_method
		{
			get
			{
				return this._approval_method;
			}
			set
			{
				if ((this._approval_method != value))
				{
					this.Onapproval_methodChanging(value);
					this.SendPropertyChanging();
					this._approval_method = value;
					this.SendPropertyChanged("approval_method");
					this.Onapproval_methodChanged();
				}
			}
		}
		
		[Column(Storage="_searchable", DbType="Int")]
		public System.Nullable<int> searchable
		{
			get
			{
				return this._searchable;
			}
			set
			{
				if ((this._searchable != value))
				{
					this.OnsearchableChanging(value);
					this.SendPropertyChanging();
					this._searchable = value;
					this.SendPropertyChanged("searchable");
					this.OnsearchableChanged();
				}
			}
		}
		
		[Column(Storage="_end_date_action", DbType="Int")]
		public System.Nullable<int> end_date_action
		{
			get
			{
				return this._end_date_action;
			}
			set
			{
				if ((this._end_date_action != value))
				{
					this.Onend_date_actionChanging(value);
					this.SendPropertyChanging();
					this._end_date_action = value;
					this.SendPropertyChanged("end_date_action");
					this.Onend_date_actionChanged();
				}
			}
		}
		
		[Column(Storage="_alias_id", DbType="BigInt")]
		public System.Nullable<long> alias_id
		{
			get
			{
				return this._alias_id;
			}
			set
			{
				if ((this._alias_id != value))
				{
					this.Onalias_idChanging(value);
					this.SendPropertyChanging();
					this._alias_id = value;
					this.SendPropertyChanged("alias_id");
					this.Onalias_idChanged();
				}
			}
		}
		
		[Column(Storage="_contentfulltextkey", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string contentfulltextkey
		{
			get
			{
				return this._contentfulltextkey;
			}
			set
			{
				if ((this._contentfulltextkey != value))
				{
					this.OncontentfulltextkeyChanging(value);
					this.SendPropertyChanging();
					this._contentfulltextkey = value;
					this.SendPropertyChanged("contentfulltextkey");
					this.OncontentfulltextkeyChanged();
				}
			}
		}
		
		[Column(Storage="_asset_id", DbType="VarChar(50)")]
		public string asset_id
		{
			get
			{
				return this._asset_id;
			}
			set
			{
				if ((this._asset_id != value))
				{
					if (this._AssetDataTable.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onasset_idChanging(value);
					this.SendPropertyChanging();
					this._asset_id = value;
					this.SendPropertyChanged("asset_id");
					this.Onasset_idChanged();
				}
			}
		}
		
		[Column(Storage="_asset_version", DbType="VarChar(50)")]
		public string asset_version
		{
			get
			{
				return this._asset_version;
			}
			set
			{
				if ((this._asset_version != value))
				{
					this.Onasset_versionChanging(value);
					this.SendPropertyChanging();
					this._asset_version = value;
					this.SendPropertyChanged("asset_version");
					this.Onasset_versionChanged();
				}
			}
		}
		
		[Column(Storage="_xml_config_id", DbType="BigInt")]
		public System.Nullable<long> xml_config_id
		{
			get
			{
				return this._xml_config_id;
			}
			set
			{
				if ((this._xml_config_id != value))
				{
					this.Onxml_config_idChanging(value);
					this.SendPropertyChanging();
					this._xml_config_id = value;
					this.SendPropertyChanged("xml_config_id");
					this.Onxml_config_idChanged();
				}
			}
		}
		
		[Column(Storage="_template_id", DbType="BigInt")]
		public System.Nullable<long> template_id
		{
			get
			{
				return this._template_id;
			}
			set
			{
				if ((this._template_id != value))
				{
					this.Ontemplate_idChanging(value);
					this.SendPropertyChanging();
					this._template_id = value;
					this.SendPropertyChanged("template_id");
					this.Ontemplate_idChanged();
				}
			}
		}
		
		[Column(Storage="_last_replicated_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> last_replicated_date
		{
			get
			{
				return this._last_replicated_date;
			}
			set
			{
				if ((this._last_replicated_date != value))
				{
					this.Onlast_replicated_dateChanging(value);
					this.SendPropertyChanging();
					this._last_replicated_date = value;
					this.SendPropertyChanged("last_replicated_date");
					this.Onlast_replicated_dateChanged();
				}
			}
		}
		
		[Column(Storage="_image", DbType="NVarChar(550)")]
		public string image
		{
			get
			{
				return this._image;
			}
			set
			{
				if ((this._image != value))
				{
					this.OnimageChanging(value);
					this.SendPropertyChanging();
					this._image = value;
					this.SendPropertyChanged("image");
					this.OnimageChanged();
				}
			}
		}
		
		[Column(Name="private", Storage="_private", DbType="Bit")]
		public System.Nullable<bool> @private
		{
			get
			{
				return this._private;
			}
			set
			{
				if ((this._private != value))
				{
					this.OnprivateChanging(value);
					this.SendPropertyChanging();
					this._private = value;
					this.SendPropertyChanged("@private");
					this.OnprivateChanged();
				}
			}
		}
		
		[Column(Storage="_flag_def_id", DbType="BigInt")]
		public System.Nullable<long> flag_def_id
		{
			get
			{
				return this._flag_def_id;
			}
			set
			{
				if ((this._flag_def_id != value))
				{
					this.Onflag_def_idChanging(value);
					this.SendPropertyChanging();
					this._flag_def_id = value;
					this.SendPropertyChanged("flag_def_id");
					this.Onflag_def_idChanged();
				}
			}
		}
		
		[Column(Storage="_content_subtype", DbType="Int NOT NULL")]
		public int content_subtype
		{
			get
			{
				return this._content_subtype;
			}
			set
			{
				if ((this._content_subtype != value))
				{
					this.Oncontent_subtypeChanging(value);
					this.SendPropertyChanging();
					this._content_subtype = value;
					this.SendPropertyChanged("content_subtype");
					this.Oncontent_subtypeChanged();
				}
			}
		}
		
		[Association(Name="Document_EKContent", Storage="_AssetDataTable", ThisKey="asset_id", OtherKey="id", IsForeignKey=true)]
		public Document Document
		{
			get
			{
				return this._AssetDataTable.Entity;
			}
			set
			{
				Document previousValue = this._AssetDataTable.Entity;
				if (((previousValue != value) 
							|| (this._AssetDataTable.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AssetDataTable.Entity = null;
						previousValue.EKContents.Remove(this);
					}
					this._AssetDataTable.Entity = value;
					if ((value != null))
					{
						value.EKContents.Add(this);
						this._asset_id = value.id;
					}
					else
					{
						this._asset_id = default(string);
					}
					this.SendPropertyChanged("Document");
				}
			}
		}
		
		[Association(Name="TaxonomyItem_EKContent", Storage="_TaxonomyItem", ThisKey="content_id", OtherKey="taxonomy_item_id", IsForeignKey=true)]
		public TaxonomyItem TaxonomyItem
		{
			get
			{
				return this._TaxonomyItem.Entity;
			}
			set
			{
				TaxonomyItem previousValue = this._TaxonomyItem.Entity;
				if (((previousValue != value) 
							|| (this._TaxonomyItem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaxonomyItem.Entity = null;
						previousValue.EKContents = null;
					}
					this._TaxonomyItem.Entity = value;
					if ((value != null))
					{
						value.EKContents = this;
						this._content_id = value.taxonomy_item_id;
					}
					else
					{
						this._content_id = default(long);
					}
					this.SendPropertyChanged("TaxonomyItem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.han_vw_AssetDataTable")]
	public partial class Document : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id;
		
		private string _handle;
		
		private string _name;
		
		private string _mimeType;
		
		private string _storage;
		
		private int _length;
		
		private string _version;
		
		private string _status;
		
		private System.DateTime _dateModified;
		
		private string _label;
		
		private string _astLanguage;
		
		private string _assetType;
		
		private string _publishName;
		
		private string _serverId;
		
		private System.Nullable<bool> _publishAsPDF;
		
		private string _pubFolderPath;
		
		private EntitySet<EKContent> _contents;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(string value);
    partial void OnidChanged();
    partial void OnhandleChanging(string value);
    partial void OnhandleChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnmimeTypeChanging(string value);
    partial void OnmimeTypeChanged();
    partial void OnstorageChanging(string value);
    partial void OnstorageChanged();
    partial void OnlengthChanging(int value);
    partial void OnlengthChanged();
    partial void OnversionChanging(string value);
    partial void OnversionChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void OndateModifiedChanging(System.DateTime value);
    partial void OndateModifiedChanged();
    partial void OnlabelChanging(string value);
    partial void OnlabelChanged();
    partial void OnastLanguageChanging(string value);
    partial void OnastLanguageChanged();
    partial void OnassetTypeChanging(string value);
    partial void OnassetTypeChanged();
    partial void OnpublishNameChanging(string value);
    partial void OnpublishNameChanged();
    partial void OnserverIdChanging(string value);
    partial void OnserverIdChanged();
    partial void OnpublishAsPDFChanging(System.Nullable<bool> value);
    partial void OnpublishAsPDFChanged();
    partial void OnpubFolderPathChanging(string value);
    partial void OnpubFolderPathChanged();
    #endregion
		
		public Document()
		{
			this._contents = new EntitySet<EKContent>(new Action<EKContent>(this.attach_contents), new Action<EKContent>(this.detach_contents));
			OnCreated();
		}
		
		[Column(Storage="_id", DbType="VarChar(50)", CanBeNull=false, IsPrimaryKey=true)]
		public string id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[Column(Storage="_handle", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		public string handle
		{
			get
			{
				return this._handle;
			}
			set
			{
				if ((this._handle != value))
				{
					this.OnhandleChanging(value);
					this.SendPropertyChanging();
					this._handle = value;
					this.SendPropertyChanged("handle");
					this.OnhandleChanged();
				}
			}
		}
		
		[Column(Storage="_name", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[Column(Storage="_mimeType", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string mimeType
		{
			get
			{
				return this._mimeType;
			}
			set
			{
				if ((this._mimeType != value))
				{
					this.OnmimeTypeChanging(value);
					this.SendPropertyChanging();
					this._mimeType = value;
					this.SendPropertyChanged("mimeType");
					this.OnmimeTypeChanged();
				}
			}
		}
		
		[Column(Storage="_storage", DbType="NVarChar(512) NOT NULL", CanBeNull=false)]
		public string storage
		{
			get
			{
				return this._storage;
			}
			set
			{
				if ((this._storage != value))
				{
					this.OnstorageChanging(value);
					this.SendPropertyChanging();
					this._storage = value;
					this.SendPropertyChanged("storage");
					this.OnstorageChanged();
				}
			}
		}
		
		[Column(Storage="_length", DbType="Int NOT NULL")]
		public int length
		{
			get
			{
				return this._length;
			}
			set
			{
				if ((this._length != value))
				{
					this.OnlengthChanging(value);
					this.SendPropertyChanging();
					this._length = value;
					this.SendPropertyChanged("length");
					this.OnlengthChanged();
				}
			}
		}
		
		[Column(Storage="_version", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string version
		{
			get
			{
				return this._version;
			}
			set
			{
				if ((this._version != value))
				{
					this.OnversionChanging(value);
					this.SendPropertyChanging();
					this._version = value;
					this.SendPropertyChanged("version");
					this.OnversionChanged();
				}
			}
		}
		
		[Column(Storage="_status", DbType="NVarChar(32) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[Column(Storage="_dateModified", DbType="DateTime NOT NULL")]
		public System.DateTime dateModified
		{
			get
			{
				return this._dateModified;
			}
			set
			{
				if ((this._dateModified != value))
				{
					this.OndateModifiedChanging(value);
					this.SendPropertyChanging();
					this._dateModified = value;
					this.SendPropertyChanged("dateModified");
					this.OndateModifiedChanged();
				}
			}
		}
		
		[Column(Storage="_label", DbType="NVarChar(256)")]
		public string label
		{
			get
			{
				return this._label;
			}
			set
			{
				if ((this._label != value))
				{
					this.OnlabelChanging(value);
					this.SendPropertyChanging();
					this._label = value;
					this.SendPropertyChanged("label");
					this.OnlabelChanged();
				}
			}
		}
		
		[Column(Storage="_astLanguage", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string astLanguage
		{
			get
			{
				return this._astLanguage;
			}
			set
			{
				if ((this._astLanguage != value))
				{
					this.OnastLanguageChanging(value);
					this.SendPropertyChanging();
					this._astLanguage = value;
					this.SendPropertyChanged("astLanguage");
					this.OnastLanguageChanged();
				}
			}
		}
		
		[Column(Storage="_assetType", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string assetType
		{
			get
			{
				return this._assetType;
			}
			set
			{
				if ((this._assetType != value))
				{
					this.OnassetTypeChanging(value);
					this.SendPropertyChanging();
					this._assetType = value;
					this.SendPropertyChanged("assetType");
					this.OnassetTypeChanged();
				}
			}
		}
		
		[Column(Storage="_publishName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
		public string publishName
		{
			get
			{
				return this._publishName;
			}
			set
			{
				if ((this._publishName != value))
				{
					this.OnpublishNameChanging(value);
					this.SendPropertyChanging();
					this._publishName = value;
					this.SendPropertyChanged("publishName");
					this.OnpublishNameChanged();
				}
			}
		}
		
		[Column(Storage="_serverId", DbType="VarChar(40)")]
		public string serverId
		{
			get
			{
				return this._serverId;
			}
			set
			{
				if ((this._serverId != value))
				{
					this.OnserverIdChanging(value);
					this.SendPropertyChanging();
					this._serverId = value;
					this.SendPropertyChanged("serverId");
					this.OnserverIdChanged();
				}
			}
		}
		
		[Column(Storage="_publishAsPDF", DbType="Bit")]
		public System.Nullable<bool> publishAsPDF
		{
			get
			{
				return this._publishAsPDF;
			}
			set
			{
				if ((this._publishAsPDF != value))
				{
					this.OnpublishAsPDFChanging(value);
					this.SendPropertyChanging();
					this._publishAsPDF = value;
					this.SendPropertyChanged("publishAsPDF");
					this.OnpublishAsPDFChanged();
				}
			}
		}
		
		[Column(Storage="_pubFolderPath", DbType="VarChar(2000)")]
		public string pubFolderPath
		{
			get
			{
				return this._pubFolderPath;
			}
			set
			{
				if ((this._pubFolderPath != value))
				{
					this.OnpubFolderPathChanging(value);
					this.SendPropertyChanging();
					this._pubFolderPath = value;
					this.SendPropertyChanged("pubFolderPath");
					this.OnpubFolderPathChanged();
				}
			}
		}
		
		[Association(Name="Document_EKContent", Storage="_contents", ThisKey="id", OtherKey="asset_id")]
		public EntitySet<EKContent> EKContents
		{
			get
			{
				return this._contents;
			}
			set
			{
				this._contents.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_contents(EKContent entity)
		{
			this.SendPropertyChanging();
			entity.Document = this;
		}
		
		private void detach_contents(EKContent entity)
		{
			this.SendPropertyChanging();
			entity.Document = null;
		}
	}
	
	[Table(Name="dbo.content_meta_tbl")]
	public partial class content_meta_tbl : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _meta_type_id;
		
		private long _content_id;
		
		private int _content_language;
		
		private string _meta_value;
		
		private int _active;
		
		private EntityRef<EKContent> _EkContent;
		
		private EntityRef<metadata_type> _metadata_type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onmeta_type_idChanging(long value);
    partial void Onmeta_type_idChanged();
    partial void Oncontent_idChanging(long value);
    partial void Oncontent_idChanged();
    partial void Oncontent_languageChanging(int value);
    partial void Oncontent_languageChanged();
    partial void Onmeta_valueChanging(string value);
    partial void Onmeta_valueChanged();
    partial void OnactiveChanging(int value);
    partial void OnactiveChanged();
    #endregion
		
		public content_meta_tbl()
		{
			this._EkContent = default(EntityRef<EKContent>);
			this._metadata_type = default(EntityRef<metadata_type>);
			OnCreated();
		}
		
		[Column(Storage="_meta_type_id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long meta_type_id
		{
			get
			{
				return this._meta_type_id;
			}
			set
			{
				if ((this._meta_type_id != value))
				{
					if (this._metadata_type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmeta_type_idChanging(value);
					this.SendPropertyChanging();
					this._meta_type_id = value;
					this.SendPropertyChanged("meta_type_id");
					this.Onmeta_type_idChanged();
				}
			}
		}
		
		[Column(Storage="_content_id", DbType="BigInt NOT NULL", IsPrimaryKey=true)]
		public long content_id
		{
			get
			{
				return this._content_id;
			}
			set
			{
				if ((this._content_id != value))
				{
					if (this._EkContent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncontent_idChanging(value);
					this.SendPropertyChanging();
					this._content_id = value;
					this.SendPropertyChanged("content_id");
					this.Oncontent_idChanged();
				}
			}
		}
		
		[Column(Storage="_content_language", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int content_language
		{
			get
			{
				return this._content_language;
			}
			set
			{
				if ((this._content_language != value))
				{
					if (this._EkContent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncontent_languageChanging(value);
					this.SendPropertyChanging();
					this._content_language = value;
					this.SendPropertyChanged("content_language");
					this.Oncontent_languageChanged();
				}
			}
		}
		
		[Column(Storage="_meta_value", DbType="NVarChar(2000)")]
		public string meta_value
		{
			get
			{
				return this._meta_value;
			}
			set
			{
				if ((this._meta_value != value))
				{
					this.Onmeta_valueChanging(value);
					this.SendPropertyChanging();
					this._meta_value = value;
					this.SendPropertyChanged("meta_value");
					this.Onmeta_valueChanged();
				}
			}
		}
		
		[Column(Storage="_active", DbType="Int NOT NULL")]
		public int active
		{
			get
			{
				return this._active;
			}
			set
			{
				if ((this._active != value))
				{
					this.OnactiveChanging(value);
					this.SendPropertyChanging();
					this._active = value;
					this.SendPropertyChanged("active");
					this.OnactiveChanged();
				}
			}
		}
		
		[Association(Name="EKContent_content_meta_tbl", Storage="_EkContent", ThisKey="content_id,content_language", OtherKey="content_id,content_language", IsForeignKey=true)]
		public EKContent EKContent
		{
			get
			{
				return this._EkContent.Entity;
			}
			set
			{
				if ((this._EkContent.Entity != value))
				{
					this.SendPropertyChanging();
					this._EkContent.Entity = value;
					this.SendPropertyChanged("EKContent");
				}
			}
		}
		
		[Association(Name="metadata_type_content_meta_tbl", Storage="_metadata_type", ThisKey="meta_type_id", OtherKey="meta_type_id", IsForeignKey=true)]
		public metadata_type metadata_type
		{
			get
			{
				return this._metadata_type.Entity;
			}
			set
			{
				metadata_type previousValue = this._metadata_type.Entity;
				if (((previousValue != value) 
							|| (this._metadata_type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._metadata_type.Entity = null;
						previousValue.content_meta_tbls.Remove(this);
					}
					this._metadata_type.Entity = value;
					if ((value != null))
					{
						value.content_meta_tbls.Add(this);
						this._meta_type_id = value.meta_type_id;
					}
					else
					{
						this._meta_type_id = default(long);
					}
					this.SendPropertyChanged("metadata_type");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
