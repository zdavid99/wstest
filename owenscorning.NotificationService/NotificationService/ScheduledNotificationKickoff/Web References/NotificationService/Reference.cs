//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3074
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.3074.
// 
#pragma warning disable 1591

namespace ScheduledNotificationKickoff.NotificationService {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="NotificationServiceSoap", Namespace="http://ws.owenscorning.com/")]
    public partial class NotificationService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ProcessOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDocumentsListOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubscribeWithNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback SubscribeOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnsubscribeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public NotificationService() {
            this.Url = global::ScheduledNotificationKickoff.Properties.Settings.Default.ScheduledNotificationKickoff_NotificationService_NotificationService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ProcessCompletedEventHandler ProcessCompleted;
        
        /// <remarks/>
        public event GetDocumentsListCompletedEventHandler GetDocumentsListCompleted;
        
        /// <remarks/>
        public event SubscribeWithNameCompletedEventHandler SubscribeWithNameCompleted;
        
        /// <remarks/>
        public event SubscribeCompletedEventHandler SubscribeCompleted;
        
        /// <remarks/>
        public event UnsubscribeCompletedEventHandler UnsubscribeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.owenscorning.com/Process", RequestNamespace="http://ws.owenscorning.com/", ResponseNamespace="http://ws.owenscorning.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public DocumentProcessResults Process(DocumentProcessOptions processingOptions) {
            object[] results = this.Invoke("Process", new object[] {
                        processingOptions});
            return ((DocumentProcessResults)(results[0]));
        }
        
        /// <remarks/>
        public void ProcessAsync(DocumentProcessOptions processingOptions) {
            this.ProcessAsync(processingOptions, null);
        }
        
        /// <remarks/>
        public void ProcessAsync(DocumentProcessOptions processingOptions, object userState) {
            if ((this.ProcessOperationCompleted == null)) {
                this.ProcessOperationCompleted = new System.Threading.SendOrPostCallback(this.OnProcessOperationCompleted);
            }
            this.InvokeAsync("Process", new object[] {
                        processingOptions}, this.ProcessOperationCompleted, userState);
        }
        
        private void OnProcessOperationCompleted(object arg) {
            if ((this.ProcessCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ProcessCompleted(this, new ProcessCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.owenscorning.com/GetDocumentsList", RequestNamespace="http://ws.owenscorning.com/", ResponseNamespace="http://ws.owenscorning.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BatchedDocumentResults GetDocumentsList(string site, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> batchId) {
            object[] results = this.Invoke("GetDocumentsList", new object[] {
                        site,
                        batchId});
            return ((BatchedDocumentResults)(results[0]));
        }
        
        /// <remarks/>
        public void GetDocumentsListAsync(string site, System.Nullable<int> batchId) {
            this.GetDocumentsListAsync(site, batchId, null);
        }
        
        /// <remarks/>
        public void GetDocumentsListAsync(string site, System.Nullable<int> batchId, object userState) {
            if ((this.GetDocumentsListOperationCompleted == null)) {
                this.GetDocumentsListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDocumentsListOperationCompleted);
            }
            this.InvokeAsync("GetDocumentsList", new object[] {
                        site,
                        batchId}, this.GetDocumentsListOperationCompleted, userState);
        }
        
        private void OnGetDocumentsListOperationCompleted(object arg) {
            if ((this.GetDocumentsListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDocumentsListCompleted(this, new GetDocumentsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.owenscorning.com/SubscribeWithName", RequestNamespace="http://ws.owenscorning.com/", ResponseNamespace="http://ws.owenscorning.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SubscribeWithName(string email, string site, string firstName, string lastName) {
            object[] results = this.Invoke("SubscribeWithName", new object[] {
                        email,
                        site,
                        firstName,
                        lastName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SubscribeWithNameAsync(string email, string site, string firstName, string lastName) {
            this.SubscribeWithNameAsync(email, site, firstName, lastName, null);
        }
        
        /// <remarks/>
        public void SubscribeWithNameAsync(string email, string site, string firstName, string lastName, object userState) {
            if ((this.SubscribeWithNameOperationCompleted == null)) {
                this.SubscribeWithNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubscribeWithNameOperationCompleted);
            }
            this.InvokeAsync("SubscribeWithName", new object[] {
                        email,
                        site,
                        firstName,
                        lastName}, this.SubscribeWithNameOperationCompleted, userState);
        }
        
        private void OnSubscribeWithNameOperationCompleted(object arg) {
            if ((this.SubscribeWithNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubscribeWithNameCompleted(this, new SubscribeWithNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.owenscorning.com/Subscribe", RequestNamespace="http://ws.owenscorning.com/", ResponseNamespace="http://ws.owenscorning.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Subscribe(string email, string site) {
            object[] results = this.Invoke("Subscribe", new object[] {
                        email,
                        site});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SubscribeAsync(string email, string site) {
            this.SubscribeAsync(email, site, null);
        }
        
        /// <remarks/>
        public void SubscribeAsync(string email, string site, object userState) {
            if ((this.SubscribeOperationCompleted == null)) {
                this.SubscribeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSubscribeOperationCompleted);
            }
            this.InvokeAsync("Subscribe", new object[] {
                        email,
                        site}, this.SubscribeOperationCompleted, userState);
        }
        
        private void OnSubscribeOperationCompleted(object arg) {
            if ((this.SubscribeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SubscribeCompleted(this, new SubscribeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://ws.owenscorning.com/Unsubscribe", RequestNamespace="http://ws.owenscorning.com/", ResponseNamespace="http://ws.owenscorning.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool Unsubscribe(string email, string site) {
            object[] results = this.Invoke("Unsubscribe", new object[] {
                        email,
                        site});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UnsubscribeAsync(string email, string site) {
            this.UnsubscribeAsync(email, site, null);
        }
        
        /// <remarks/>
        public void UnsubscribeAsync(string email, string site, object userState) {
            if ((this.UnsubscribeOperationCompleted == null)) {
                this.UnsubscribeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnsubscribeOperationCompleted);
            }
            this.InvokeAsync("Unsubscribe", new object[] {
                        email,
                        site}, this.UnsubscribeOperationCompleted, userState);
        }
        
        private void OnUnsubscribeOperationCompleted(object arg) {
            if ((this.UnsubscribeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnsubscribeCompleted(this, new UnsubscribeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3074")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.owenscorning.com/")]
    public partial class DocumentProcessOptions {
        
        private string siteField;
        
        private string taxonomyNameField;
        
        private System.DateTime startDateField;
        
        private System.DateTime endDateField;
        
        private string[] fileTypesField;
        
        /// <remarks/>
        public string Site {
            get {
                return this.siteField;
            }
            set {
                this.siteField = value;
            }
        }
        
        /// <remarks/>
        public string TaxonomyName {
            get {
                return this.taxonomyNameField;
            }
            set {
                this.taxonomyNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        public string[] FileTypes {
            get {
                return this.fileTypesField;
            }
            set {
                this.fileTypesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3074")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.owenscorning.com/")]
    public partial class UpdatedDoc {
        
        private int batchField;
        
        private System.DateTime dateUpdatedField;
        
        private string documentNameField;
        
        private string documentTypeField;
        
        private string fileSizeField;
        
        private string urlField;
        
        /// <remarks/>
        public int batch {
            get {
                return this.batchField;
            }
            set {
                this.batchField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime dateUpdated {
            get {
                return this.dateUpdatedField;
            }
            set {
                this.dateUpdatedField = value;
            }
        }
        
        /// <remarks/>
        public string documentName {
            get {
                return this.documentNameField;
            }
            set {
                this.documentNameField = value;
            }
        }
        
        /// <remarks/>
        public string documentType {
            get {
                return this.documentTypeField;
            }
            set {
                this.documentTypeField = value;
            }
        }
        
        /// <remarks/>
        public string fileSize {
            get {
                return this.fileSizeField;
            }
            set {
                this.fileSizeField = value;
            }
        }
        
        /// <remarks/>
        public string url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3074")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.owenscorning.com/")]
    public partial class BatchedDocumentResults {
        
        private string statusField;
        
        private int batchIdField;
        
        private System.DateTime startDateField;
        
        private System.DateTime endDateField;
        
        private UpdatedDoc[] documentListField;
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public int BatchId {
            get {
                return this.batchIdField;
            }
            set {
                this.batchIdField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        public UpdatedDoc[] DocumentList {
            get {
                return this.documentListField;
            }
            set {
                this.documentListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.3074")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.owenscorning.com/")]
    public partial class DocumentProcessResults {
        
        private string statusField;
        
        private System.DateTime startDateField;
        
        private System.DateTime endDateField;
        
        private int documentsInBatchField;
        
        private int batchIdField;
        
        /// <remarks/>
        public string Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartDate {
            get {
                return this.startDateField;
            }
            set {
                this.startDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EndDate {
            get {
                return this.endDateField;
            }
            set {
                this.endDateField = value;
            }
        }
        
        /// <remarks/>
        public int DocumentsInBatch {
            get {
                return this.documentsInBatchField;
            }
            set {
                this.documentsInBatchField = value;
            }
        }
        
        /// <remarks/>
        public int BatchId {
            get {
                return this.batchIdField;
            }
            set {
                this.batchIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void ProcessCompletedEventHandler(object sender, ProcessCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ProcessCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ProcessCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public DocumentProcessResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((DocumentProcessResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void GetDocumentsListCompletedEventHandler(object sender, GetDocumentsListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDocumentsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDocumentsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BatchedDocumentResults Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BatchedDocumentResults)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SubscribeWithNameCompletedEventHandler(object sender, SubscribeWithNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubscribeWithNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubscribeWithNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void SubscribeCompletedEventHandler(object sender, SubscribeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SubscribeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SubscribeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    public delegate void UnsubscribeCompletedEventHandler(object sender, UnsubscribeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.3053")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnsubscribeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnsubscribeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591